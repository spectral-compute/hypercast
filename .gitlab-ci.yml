stages:
  - Build-Debug
  - Test
  - Build-Release
  - Deploy

.env:
  image: $DOCKER_REGISTRY/spectral/build/live-video-streamer

Build:
  extends: .env
  stage: Build-Debug
  script:
    - run "cmake -DCMAKE_BUILD_TYPE=Debug -DXCMAKE_CLANG_TIDY=On -DXCMAKE_SYSTEM_GTEST=Off -DXCMAKE_DOXYGEN_WERROR=Off -DCMAKE_INSTALL_PREFIX=inst -Bbuild src"
    - run "make -C build install -j$(nproc)"
  variables:
    CI_PROPAGATE_WORKSPACE: 1

Test:
  extends: .env
  stage: Test
  script:
    - run "inst/test/bin/live-video-streamer-server_test"
    - run "inst/test/bin/js_test"
  variables:
    GIT_STRATEGY: none

Build-Release-With-Server:
  extends: .env
  stage: Build-Release
  script:
    - run "rm -rf build inst"
    - run "cmake -DCMAKE_BUILD_TYPE=Release -DXCMAKE_PACKAGING=On -DXCMAKE_CLANG_TIDY=On -DXCMAKE_SYSTEM_GTEST=Off -DXCMAKE_DOXYGEN_WERROR=Off -DCMAKE_INSTALL_PREFIX=inst -Bbuild src"
    - run "make -C build install package -j$(nproc)"
    - run "tar tf build/*.tar.gz" # Show the package contents.

    # Check package contents.
    - run "tar tf build/*.tar.gz | grep -qE '^spectral-live-video-streamer/bin/live-video-streamer-server$'"
    - run "tar tf build/*.tar.gz | grep -qE '^SpectralLiveVideoStreamer/share/spectral-video-streamer/demo-client/index[.]html$'"
    - run "tar tf build/*.tar.gz | grep -qE '^SpectralLiveVideoStreamer/share/spectral-video-streamer/client/live-video-streamer-client[.]js$'"
    - run "tar tf build/*.tar.gz | grep -qE '^SpectralLiveVideoStreamer/share/spectral-video-streamer/client/live-video-streamer-client[.]d[.]ts$'"
    - run "! tar tf build/*.tar.gz | grep -qE '([.]map|/asset-manifest[.]json)$'"

  variables:
    GIT_STRATEGY: none

Build-Release-Client-Only:
  extends: .env
  stage: Build-Release
  script:
    - run "rm -rf build inst"
    - run "cmake -DCMAKE_BUILD_TYPE=Release -DXCMAKE_PACKAGING=On -DENABLE_SERVER=Off -DXCMAKE_CLANG_TIDY=On -DXCMAKE_SYSTEM_GTEST=Off -DXCMAKE_DOXYGEN_WERROR=Off -DCMAKE_INSTALL_PREFIX=inst -Bbuild src"
    - run "make -C build install package -j$(nproc)"
    - run "tar tf build/*.tar.gz" # Show the package contents.

    # Check package contents.
    - run "tar tf build/*.tar.gz | grep -qE '^spectral-live-video-streamer-client/demo-client/index[.]html$'"
    - run "tar tf build/*.tar.gz | grep -qE '^spectral-live-video-streamer-client/client/live-video-streamer-client[.]js$'"
    - run "tar tf build/*.tar.gz | grep -qE '^spectral-live-video-streamer-client/client/live-video-streamer-client[.]d[.]ts$'"
    - run "! tar tf build/*.tar.gz | grep -qE '([.]map|/asset-manifest[.]json)$'"

  variables:
    GIT_STRATEGY: none

Manual:
  extends: .env
  stage: Deploy
  variables:
    GIT_STRATEGY: none
  script:
    - run publishDocs.sh
